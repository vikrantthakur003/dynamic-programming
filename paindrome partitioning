#include<bits/stdc++.h>
int dp[1001];

int palindrome(string str,int i,int j)
{
    
    while(i<j)
    {
        if(str[i] != str[j])
        {
            return false;
        }
        else
        {
            i++;
            j--;
        }
    }
    return true;
}

int solve(int i,int n,string &str,vector<int> &dp)
{
    
    if(i>=n)
    {
        return 0;
    }
   
    if(dp[i] != -1)
    {
        return dp[i];
    }
    
    int mn  = INT_MAX;
    for(int j=i;j<n;j++)
    {
        if(palindrome(str,i,j)) 
    {
    int temp = 1+solve(j+1,n,str,dp);
              mn = min(temp,mn);
    }
      
    }
    
    dp[i] = mn;
    return mn;
    
}


int palindromePartitioning(string str) {
    // Write your code here
    int n = str.size();
    vector<int> dp(n,-1);
    
    int ans = solve(0,n,str,dp) -1;
    return ans;
}
